import React from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { Pressable, ScrollView, Text, useColorScheme, View } from 'react-native';
import dynamicStyles from './styles';
import { addPostThunk } from '../../redux/thunks/posts';
import { useNavigation } from '@react-navigation/native';
import { useFormikWithErrorAutoClear } from '../../utils/formik';
import { addPostValidation } from '../../core/validation/addPostValidation';
import { showErrorNotification, showSuccessNotification } from '../../utils/toast';
import { MultilineTextInput, AppTitle, AppBtn, Loader, FilePicker, AppModal } from '../../components';

const AddPost = (props) => {
  const dispatch = useDispatch();
  const colorScheme = useColorScheme();
  const styles = dynamicStyles(colorScheme);
  const navigation = useNavigation();
  const loading = useSelector((state) => state.posts.addPostsLoading);
  const user = useSelector((state) => state.user.user);

  const [files, setFiles] = React.useState(null);
  const [authorized, setAuthorized] = React.useState(user);

  const { formik } = useFormikWithErrorAutoClear(
    {
      initialValues: {
        title: '',
      },
      onSubmit: (params) => {
        dispatch(addPostThunk({ ...params })).then((response) => {
          if (response.success) {
            showSuccessNotification('–ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω', '–í–∞—à –ø–æ—Å—Ç –≤–∏–¥—è—Ç –≤—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Ñ–æ—Ä—É–º–∞ —Ö–Ω—É—Ä—ç!');
            navigation.navigate('Home');
          } else if (response?.error?.code === 'storage/file-not-found') {
            showErrorNotification('–ü—É—Ç—å –∫ –ª–æ–∫–∞–ª—å–Ω–æ–º—É —Ñ–∞–π–ª—É —É—Ç—Ä–∞—á–µ–Ω', '–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—ã –Ω–µ —É–¥–∞–ª–∏–ª–∏ —Ñ–∞–π–ª —Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞');
          } else {
            showErrorNotification('–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!', '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ');
          }
        });
      },
      validate: addPostValidation(),
    },
    'addPostError',
  );

  const handleBack = React.useCallback(() => {
    navigation.goBack();
    setAuthorized(true);
  }, [navigation]);

  const handleCreateUser = React.useCallback(() => {
    navigation.navigate('Profile');
    setAuthorized(true);
  }, [navigation]);

  return (
    <View style={styles.container}>
      <AppModal visible={!authorized}>
        <Text style={styles.modalTitle}>–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!</Text>
        <Text style={styles.modalDescription}>
          –°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º asknure. –°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç –º–æ–∂–Ω–æ –ø–µ—Ä–µ–π–¥—è –≤ –ø—Ä–æ—Ñ–∏–ª—å
          –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É "–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç"
        </Text>
        <View style={styles.modalFooter}>
          <Pressable style={styles.modalBack} onPress={handleBack}>
            <Text style={styles.modalBackText}>–ù–∞–¥–∞–∑</Text>
          </Pressable>
          <AppBtn onPress={handleCreateUser} secondary style={{ button: { height: 45 } }}>
            –°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç
          </AppBtn>
        </View>
      </AppModal>
      {loading && <Loader opacity text={'–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ'} />}
      <ScrollView contentContainerStyle={{ flex: 1 }}>
        <AppTitle style={styles.title}>üëã –°–ø—Ä–æ—Å–∏—Ç—å –ª—é–¥–µ–π</AppTitle>
        <MultilineTextInput
          onBlur={formik.handleBlur('title')}
          onChangeText={formik.onValueChange('title')}
          value={formik.values.title}
          editable
          multiline
          error={formik.touched.title && formik.errors.title}
          numberOfLines={6}
          placeholder={'–°–ø—Ä–æ—Å–∏—Ç–µ —É –ª—é–¥–µ–π —Å –•–ù–£–†–≠ ‚Ä¶'}
        />
        <AppTitle>üìÅ –î–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ/–¥–æ–∫—É–º–µ–Ω—Ç—ã</AppTitle>
        <FilePicker contentContainerStyle={{ paddingVertical: 5 }} files={files} setFiles={setFiles} />
      </ScrollView>
      <AppBtn style={{ container: { paddingVertical: 15 } }} onPress={formik.handleSubmit}>
        –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å
      </AppBtn>
    </View>
  );
};

export default AddPost;
